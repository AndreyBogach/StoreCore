@model IEnumerable<StoreCore.Model.Product.Product>

@{
    ViewBag.Title = "GetProducts";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="panel-heading">
    <h3>Products</h3>
</div>

<div class="container">
    <div class="row">
        <div class="col-sm-12">
            @Html.ActionLink("Create product", "AddProduct", new { area = "" }, new { @class = "btn btn-info add-button" })
        </div>
    </div>
</div>

<div class="container main-list">
    <div class="row list-header hidden-xs">
        <div class="col-sm-2">Product ID</div>
        <div class="col-sm-2">Creation date</div>
        <div class="col-sm-3">Name</div>
        <div class="col-sm-1">Amount</div>
        <div class="col-sm-2">Price, $</div>
        <div class="col-sm-2">Action</div>
    </div>
    @foreach (var item in Model)
    {
        <div class="row">
            <div class="col-sm-2">@item.Id</div>
            <div class="col-sm-2">@String.Format("{0:MMM. d, yyyy}", item.CreationDate)</div>
            <div class="col-sm-3">@item.Name</div>
            <div class="col-sm-1">@item.Count</div>
            <div class="col-sm-2">@item.Price</div>
            <div class="col-sm-2">
                <div class="btn-group">
                    <button type="button" class="btn btn-default btn-sm">Details</button>
                    <button type="button" class="btn btn-info btn-sm dropdown-toggle" data-toggle="dropdown">
                        <span class="caret"></span>
                        <span class="sr-only">Меню с переключением</span>
                    </button>
                    <ul class="dropdown-menu" role="menu">
                        <li>@Html.ActionLink("Update", "UpdateProduct", "Product", new { id = item.Id }, null)</li>
                        <li>@Html.ActionLink("Delete", "DeleteProduct", "Product", new { id = item.Id }, null)</li>
                    </ul>
                </div>
            </div>
        </div>
    }
</div>

@using PagedList.Mvc;
@using PagedList;

<div class="text-center">
    @Html.PagedListPager((IPagedList)Model, page => Url.Action("GetProducts", new { page }))
</div>

